prometheus.exporter.apache "integrations_apache_http" {
	scrape_uri = "http://0.0.0.0/server-status?auto"
}

prometheus.scrape "integrations_apache_http" {
	targets    = prometheus.exporter.apache.integrations_apache_http.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/apache_http"
}

prometheus.remote_write "integrations" {
	endpoint {
		url = "http://localhost:9009/api/prom/push"

		queue_config { }

		metadata_config { }
	}
}

prometheus.exporter.blackbox "integrations_blackbox" {
	target "example" {
		address = "http://example.com"
		module  = "http_2xx"
	}
	probe_timeout_offset = "0s"
}

prometheus.scrape "integrations_blackbox" {
	targets    = prometheus.exporter.blackbox.integrations_blackbox.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/blackbox"
}

prometheus.exporter.cloudwatch "integrations_cloudwatch_exporter" {
	sts_region    = "us-east-2"
	fips_disabled = false

	discovery {
		regions     = ["us-east-2"]
		custom_tags = {}
		search_tags = {}
		type        = "AWS/EC2"

		metric {
			name       = "CPUUtilization"
			statistics = ["Average"]
			period     = "5m0s"
		}

		metric {
			name       = "NetworkPacketsIn"
			statistics = ["Average"]
			period     = "5m0s"
		}
	}
}

prometheus.scrape "integrations_cloudwatch_exporter" {
	targets    = prometheus.exporter.cloudwatch.integrations_cloudwatch_exporter.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/cloudwatch_exporter"
}

prometheus.exporter.consul "integrations_consul_exporter" { }

prometheus.scrape "integrations_consul_exporter" {
	targets    = prometheus.exporter.consul.integrations_consul_exporter.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/consul_exporter"
}

prometheus.exporter.dnsmasq "integrations_dnsmasq_exporter" {
	address = "dnsmasq-a:53"
}

discovery.relabel "integrations_dnsmasq_exporter" {
	targets = prometheus.exporter.dnsmasq.integrations_dnsmasq_exporter.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "instance"
		replacement   = "dnsmasq-a"
	}
}

prometheus.scrape "integrations_dnsmasq_exporter" {
	targets    = discovery.relabel.integrations_dnsmasq_exporter.output
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/dnsmasq_exporter"
}

prometheus.exporter.elasticsearch "integrations_elasticsearch_exporter" { }

prometheus.scrape "integrations_elasticsearch_exporter" {
	targets    = prometheus.exporter.elasticsearch.integrations_elasticsearch_exporter.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/elasticsearch_exporter"
}

prometheus.exporter.gcp "integrations_gcp_exporter" {
	project_ids      = ["<project_id>"]
	metrics_prefixes = ["loadbalancing.googleapis.com/https/request_bytes_count", "loadbalancing.googleapis.com/https/total_latencies"]
	extra_filters    = ["loadbalancing.googleapis.com:resource.labels.backend_target_name=\"sample-value\""]
}

prometheus.scrape "integrations_gcp_exporter" {
	targets    = prometheus.exporter.gcp.integrations_gcp_exporter.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/gcp_exporter"
}

prometheus.exporter.github "integrations_github_exporter" {
	repositories = ["grafana/agent", "grafana/agent-modules"]
	api_token    = "ABCDEFGH-1234-ABCD-1234-ABCDEFGHIJKL"
}

prometheus.scrape "integrations_github_exporter" {
	targets    = prometheus.exporter.github.integrations_github_exporter.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/github_exporter"
}

prometheus.exporter.kafka "integrations_kafka_exporter" { }

prometheus.scrape "integrations_kafka_exporter" {
	targets    = prometheus.exporter.kafka.integrations_kafka_exporter.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/kafka_exporter"
}

prometheus.exporter.memcached "integrations_memcached_exporter" {
	address = "memcached-a:53"
}

discovery.relabel "integrations_memcached_exporter" {
	targets = prometheus.exporter.memcached.integrations_memcached_exporter.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "instance"
		replacement   = "memcached-a"
	}
}

prometheus.scrape "integrations_memcached_exporter" {
	targets    = discovery.relabel.integrations_memcached_exporter.output
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/memcached_exporter"
}

prometheus.exporter.mongodb "integrations_mongodb_exporter" {
	mongodb_uri    = "mongodb://mongodb-a:27017"
	direct_connect = true
}

discovery.relabel "integrations_mongodb_exporter" {
	targets = prometheus.exporter.mongodb.integrations_mongodb_exporter.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "service_name"
		replacement   = "replicaset1-node1"
	}

	rule {
		source_labels = ["__address__"]
		target_label  = "mongodb_cluster"
		replacement   = "prod-cluster"
	}
}

prometheus.scrape "integrations_mongodb_exporter" {
	targets    = discovery.relabel.integrations_mongodb_exporter.output
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/mongodb_exporter"
}

prometheus.exporter.mssql "integrations_mssql" {
	connection_string = "sqlserver://<USERNAME>:<PASSWORD>@<HOST>:<PORT>"
}

prometheus.scrape "integrations_mssql" {
	targets    = prometheus.exporter.mssql.integrations_mssql.targets
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/mssql"
}

prometheus.exporter.mysql "integrations_mysqld_exporter" {
	data_source_name = "root@(server-a:3306)/"
}

discovery.relabel "integrations_mysqld_exporter" {
	targets = prometheus.exporter.mysql.integrations_mysqld_exporter.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "instance"
		replacement   = "server-a"
	}
}

prometheus.scrape "integrations_mysqld_exporter" {
	targets    = discovery.relabel.integrations_mysqld_exporter.output
	forward_to = [prometheus.remote_write.integrations.receiver]
	job_name   = "integrations/mysqld_exporter"
}

prometheus.exporter.unix { }

discovery.relabel "integrations_node_exporter" {
	targets = prometheus.exporter.unix.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "__param_id"
	}

	rule {
		source_labels = ["__param_id"]
		target_label  = "thermostat"
	}

	rule {
		target_label = "__address__"
		replacement  = "localhost:8099"
	}
}

prometheus.scrape "integrations_node_exporter" {
	targets    = discovery.relabel.integrations_node_exporter.output
	forward_to = [prometheus.relabel.integrations_node_exporter.receiver]
	job_name   = "integrations/node_exporter"
}

prometheus.relabel "integrations_node_exporter" {
	forward_to = [prometheus.remote_write.integrations.receiver]

	rule {
		source_labels = ["__metric_address1__"]
		target_label  = "__metric_param_target1"
	}

	rule {
		source_labels = ["__metric_address2__"]
		target_label  = "__metric_param_target2"
	}
}
