prometheus.remote_write "metrics_default" {
	endpoint {
		name = "default-8be96f"
		url  = "http://localhost:9009/api/prom/push"

		queue_config { }

		metadata_config { }
	}
}

prometheus.exporter.azure "integrations_azure1" {
	subscriptions = ["subId"]
	resource_type = "Microsoft.Dashboard/grafana"
	metrics       = ["HttpRequestCount"]
}

prometheus.scrape "integrations_azure1" {
	targets    = prometheus.exporter.azure.integrations_azure1.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/azure1"
}

prometheus.exporter.azure "integrations_azure2" {
	subscriptions = ["subId"]
	resource_type = "Microsoft.Dashboard/grafana"
	metrics       = ["HttpRequestCount"]
}

prometheus.scrape "integrations_azure2" {
	targets    = prometheus.exporter.azure.integrations_azure2.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/azure2"
}

prometheus.exporter.cadvisor "integrations_cadvisor" {
	store_container_labels = false
}

prometheus.scrape "integrations_cadvisor" {
	targets    = prometheus.exporter.cadvisor.integrations_cadvisor.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/cadvisor"
}

prometheus.exporter.cloudwatch "integrations_cloudwatch_exporter" {
	sts_region    = "us-east-2"
	fips_disabled = false

	discovery {
		regions     = ["us-east-2"]
		custom_tags = {}
		search_tags = {}
		type        = "AWS/EC2"

		metric {
			name        = "CPUUtilization"
			statistics  = ["Average"]
			period      = "5m0s"
			nil_to_zero = false
		}

		metric {
			name       = "NetworkPacketsIn"
			statistics = ["Average"]
			period     = "5m0s"
		}
		nil_to_zero = true
	}

	static "single_ec2_instance" {
		regions     = ["us-east-2"]
		custom_tags = {}
		namespace   = "AWS/EC2"
		dimensions  = {
			InstanceId = "i-0e43cee369aa44b52",
		}

		metric {
			name        = "CPUUtilization"
			statistics  = ["Average"]
			period      = "5m0s"
			nil_to_zero = false
		}

		metric {
			name       = "NetworkPacketsIn"
			statistics = ["Average"]
			period     = "5m0s"
		}
		nil_to_zero = true
	}

	decoupled_scraping { }
}

prometheus.scrape "integrations_cloudwatch" {
	targets    = prometheus.exporter.cloudwatch.integrations_cloudwatch_exporter.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/cloudwatch"
}

prometheus.exporter.consul "integrations_consul_exporter" { }

prometheus.scrape "integrations_consul" {
	targets    = prometheus.exporter.consul.integrations_consul_exporter.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/consul"
}

prometheus.exporter.dnsmasq "integrations_dnsmasq_exporter" {
	address = "dnsmasq-a:53"
}

discovery.relabel "integrations_dnsmasq" {
	targets = prometheus.exporter.dnsmasq.integrations_dnsmasq_exporter.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "instance"
		replacement   = "dnsmasq-a"
	}
}

prometheus.scrape "integrations_dnsmasq" {
	targets    = discovery.relabel.integrations_dnsmasq.output
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/dnsmasq"
}

prometheus.exporter.elasticsearch "integrations_elasticsearch_exporter" { }

prometheus.scrape "integrations_elasticsearch" {
	targets    = prometheus.exporter.elasticsearch.integrations_elasticsearch_exporter.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/elasticsearch"
}

prometheus.exporter.gcp "integrations_gcp_exporter" {
	project_ids      = ["<project_id>"]
	metrics_prefixes = ["loadbalancing.googleapis.com/https/request_bytes_count", "loadbalancing.googleapis.com/https/total_latencies"]
	extra_filters    = ["loadbalancing.googleapis.com:resource.labels.backend_target_name=\"sample-value\""]
}

prometheus.scrape "integrations_gcp" {
	targets    = prometheus.exporter.gcp.integrations_gcp_exporter.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/gcp"
}

prometheus.exporter.github "integrations_github_exporter" {
	repositories = ["grafana/agent", "grafana/agent-modules"]
	api_token    = "ABCDEFGH-1234-ABCD-1234-ABCDEFGHIJKL"
}

prometheus.scrape "integrations_github" {
	targets    = prometheus.exporter.github.integrations_github_exporter.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/github"
}

prometheus.exporter.kafka "integrations_kafka_exporter" { }

prometheus.scrape "integrations_kafka" {
	targets    = prometheus.exporter.kafka.integrations_kafka_exporter.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/kafka"
}

prometheus.exporter.memcached "integrations_memcached_exporter" {
	address = "memcached-a:53"
}

discovery.relabel "integrations_memcached" {
	targets = prometheus.exporter.memcached.integrations_memcached_exporter.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "instance"
		replacement   = "memcached-a"
	}
}

prometheus.scrape "integrations_memcached" {
	targets    = discovery.relabel.integrations_memcached.output
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/memcached"
}

prometheus.exporter.mongodb "integrations_mongodb_exporter" {
	mongodb_uri    = "mongodb://mongodb-a:27017"
	direct_connect = true
}

discovery.relabel "integrations_mongodb" {
	targets = prometheus.exporter.mongodb.integrations_mongodb_exporter.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "service_name"
		replacement   = "replicaset1-node1"
	}

	rule {
		source_labels = ["__address__"]
		target_label  = "mongodb_cluster"
		replacement   = "prod-cluster"
	}
}

prometheus.scrape "integrations_mongodb" {
	targets    = discovery.relabel.integrations_mongodb.output
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/mongodb"
}

prometheus.exporter.agent "integrations_agent" { }

discovery.relabel "integrations_agent" {
	targets = prometheus.exporter.agent.integrations_agent.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "test_label"
		replacement   = "test_label_value"
	}

	rule {
		source_labels = ["__address__"]
		target_label  = "test_label_2"
		replacement   = "test_label_value_2"
	}
}

prometheus.scrape "integrations_agent" {
	targets    = discovery.relabel.integrations_agent.output
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/agent"
}

prometheus.exporter.apache "integrations_apache1" {
	insecure = true
}

prometheus.scrape "integrations_apache1" {
	targets    = prometheus.exporter.apache.integrations_apache1.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/apache1"
}

prometheus.exporter.apache "integrations_apache2" { }

discovery.relabel "integrations_apache2" {
	targets = prometheus.exporter.apache.integrations_apache2.targets

	rule {
		source_labels = ["__address__"]
		target_label  = "test_label"
		replacement   = "test_label_value"
	}

	rule {
		source_labels = ["__address__"]
		target_label  = "test_label_2"
		replacement   = "test_label_value_2"
	}
}

prometheus.scrape "integrations_apache2" {
	targets    = discovery.relabel.integrations_apache2.output
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/apache2"
}

prometheus.exporter.blackbox "integrations_blackbox" {
	config = "modules:\n  http_2xx:\n    prober: http\n    timeout: 5s\n    http:\n      method: POST\n      headers:\n        Content-Type: application/json\n      body: '{}'\n      preferred_ip_protocol: ip4\n"

	target "example" {
		address = "http://example.com"
		module  = "http_2xx"
	}
	probe_timeout_offset = "0s"
}

prometheus.scrape "integrations_blackbox" {
	targets    = prometheus.exporter.blackbox.integrations_blackbox.targets
	forward_to = [prometheus.remote_write.metrics_default.receiver]
	job_name   = "integrations/blackbox"
}
