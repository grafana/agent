prometheus.remote_write "default" {
	external_labels = {
		cluster = "prod",
	}

	endpoint {
		name = "remote1"
		url  = "http://remote-write-url1"

		queue_config {
			capacity             = 2500
			max_shards           = 200
			max_samples_per_send = 500
		}

		metadata_config {
			max_samples_per_send = 500
		}
	}

	endpoint {
		name = "remote2"
		url  = "http://remote-write-url2"

		queue_config {
			capacity             = 2500
			max_shards           = 200
			max_samples_per_send = 500
		}

		metadata_config {
			max_samples_per_send = 500
		}
	}
}

discovery.azure "prometheus1" {
	subscription_id = "subscription"

	managed_identity {
		client_id = "client"
	}
	follow_redirects = true
	enable_http2     = true
}

prometheus.scrape "prometheus1" {
	targets = concat(discovery.azure.prometheus1.targets,
		[{
			__address__ = "localhost:9090",
		}])
	forward_to      = [prometheus.remote_write.default.receiver]
	job_name        = "prometheus1"
	scrape_interval = "10s"
	scrape_timeout  = "5s"

	basic_auth {
		username = "user"
		password = "pass"
	}
}

prometheus.relabel "prometheus2" {
	forward_to = [prometheus.remote_write.default.receiver]

	rule {
		source_labels = ["__address__"]
		regex         = "^(?:(.*))$"
		target_label  = "__param_target"
	}

	rule {
		source_labels = ["__param_target"]
		regex         = "^(?:(.*))$"
		target_label  = "instance"
	}

	rule {
		source_labels = []
		regex         = "^(?:(.*))$"
		target_label  = "__address__"
		replacement   = "localhost:9090"
	}
}

discovery.azure "prometheus2" {
	subscription_id = "subscription"

	managed_identity {
		client_id = "client"
	}
	proxy_url    = "proxy"
	enable_http2 = true
}

prometheus.scrape "prometheus2" {
	targets    = discovery.azure.prometheus2.targets
	forward_to = [prometheus.relabel.prometheus2.receiver]
	job_name   = "prometheus2"
}