discovery.azure "prometheus1" {
	subscription_id = "subscription1"

	oauth {
		client_id     = "client1"
		tenant_id     = "tenant1"
		client_secret = "secret1"
	}

	managed_identity {
		client_id = "client1"
	}
	follow_redirects = true
	enable_http2     = true
}

discovery.azure "prometheus1_2" {
	subscription_id = "subscription2"

	oauth {
		client_id     = "client2"
		tenant_id     = "tenant2"
		client_secret = "secret2"
	}

	managed_identity {
		client_id = "client2"
	}
	follow_redirects = true
	enable_http2     = true
}

discovery.relabel "prometheus1" {
	targets = concat(
		discovery.azure.prometheus1.targets,
		discovery.azure.prometheus1_2.targets,
		[{
			__address__ = "localhost:9090",
		}],
	)

	rule {
		source_labels = ["__address1__"]
		target_label  = "__param_target1"
	}

	rule {
		source_labels = ["__address2__"]
		target_label  = "__param_target2"
	}
}

prometheus.scrape "prometheus1" {
	targets    = discovery.relabel.prometheus1.output
	forward_to = [prometheus.relabel.prometheus1.receiver]
	job_name   = "prometheus1"
}

prometheus.relabel "prometheus1" {
	forward_to = [prometheus.remote_write.default.receiver]

	rule {
		source_labels = ["__metric_address1__"]
		target_label  = "__metric_param_target1"
	}

	rule {
		source_labels = ["__metric_address2__"]
		target_label  = "__metric_param_target2"
	}
}

prometheus.remote_write "default" {
	endpoint {
		name = "remote1"
		url  = "http://remote-write-url1"

		queue_config { }

		metadata_config { }
	}
}
