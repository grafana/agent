version: "2"
services:
  agent-1:
    image: grafana/agent:latest
    volumes:
      - /tmp/agent-1:/tmp/agent
      - ./agent/config:/etc/agent-config
    entrypoint:
      - /bin/agent
      - -config.file=/etc/agent-config/agent-scraping-service.yaml
      - -prometheus.wal-directory=/tmp/agent/wal
    ports:
      # Only the first agent needs to be exposed since they're clustered.
      - "12345:12345"

  agent-2:
    image: grafana/agent:latest
    volumes:
      - /tmp/agent-2:/tmp/agent
      - ./agent/config:/etc/agent-config
    entrypoint:
      - /bin/agent
      - -config.file=/etc/agent-config/agent-scraping-service.yaml
      - -prometheus.wal-directory=/tmp/agent/wal
    ports:
      - "12346:12345"

  agent-3:
    image: grafana/agent:latest
    volumes:
      - /tmp/agent-3:/tmp/agent
      - ./agent/config:/etc/agent-config
    entrypoint:
      - /bin/agent
      - -config.file=/etc/agent-config/agent-scraping-service.yaml
      - -prometheus.wal-directory=/tmp/agent/wal
    ports:
      - "12347:12345"

  etcd:
    image: gcr.io/etcd-development/etcd:v3.4.7
    entrypoint:
      - /usr/local/bin/etcd
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://0.0.0.0:2379
      - --log-level=info

  cortex:
    image: cortexproject/cortex:v1.8.1
    volumes:
      - /tmp/cortex:/tmp/cortex
      - ./cortex/config:/etc/cortex-config
    entrypoint:
      - /bin/cortex
      - -config.file=/etc/cortex-config/cortex.yaml
    ports:
      - "9009:9009"

  grafana:
    image: grafana/grafana:7.5.4
    entrypoint:
      - /usr/share/grafana/bin/grafana-server
      - --homepath=/usr/share/grafana
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ./grafana/config:/etc/grafana-config
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"

  avalanche-1:
    image: quay.io/freshtracks.io/avalanche:latest
  avalanche-2:
    image: quay.io/freshtracks.io/avalanche:latest
  avalanche-3:
    image: quay.io/freshtracks.io/avalanche:latest
  avalanche-4:
    image: quay.io/freshtracks.io/avalanche:latest
  avalanche-5:
    image: quay.io/freshtracks.io/avalanche:latest

  # tracing load generator
  synthetic-load-generator:
    image: omnition/synthetic-load-generator:1.0.25
    volumes:
      - ./load-generator:/etc/load-generator
    environment:
      - TOPOLOGY_FILE=/etc/load-generator/load-generator.json
      - JAEGER_COLLECTOR_URL=http://agent-1:14268
    depends_on:
      - agent-1

  # tracing backend
  otel-collector:
    image: otel/opentelemetry-collector:0.9.0
    volumes:
      - ./otel-collector:/etc/otel-collector
    command:
      - --config=/etc/otel-collector/config.yaml
