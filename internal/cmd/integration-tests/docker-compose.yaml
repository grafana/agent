version: "3"
services:

  mimir:
    image: grafana/mimir:2.10.4
    volumes:
      - ./configs/mimir:/etc/mimir-config
    entrypoint:
      - /bin/mimir
      - -config.file=/etc/mimir-config/mimir.yaml
    ports:
      - "9009:9009"

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9094:9094"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9094,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9094,CONTROLLER://kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 10
      KAFKA_NUM_PARTITIONS: 3

  kafka-gen:
    depends_on:
      - kafka
    build:
      dockerfile: ./internal/cmd/integration-tests/configs/kafka/Dockerfile
      context: ../../..

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  otel-metrics-gen:
    build:
      dockerfile: ./internal/cmd/integration-tests/configs/otel-metrics-gen/Dockerfile
      context: ../../..
    environment:
      - OTEL_EXPORTER_ENDPOINT=${OTEL_EXPORTER_ENDPOINT:-host.docker.internal:4318}

  prom-gen:
    build:
      dockerfile: ./internal/cmd/integration-tests/configs/prom-gen/Dockerfile
      context: ../../..
    ports:
      - "9001:9001"
  redis:
    image: redis:6.0.9-alpine
    ports:
      - "6379:6379"
