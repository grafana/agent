otelcol.extension.jaeger_remote_sampling "default_0" {
	grpc { }

	http { }

	source {
		remote {
			endpoint          = "jaeger-collector:14250"
			compression       = ""
			write_buffer_size = "0B"
		}
		reload_interval = "30s"
	}
}

otelcol.receiver.otlp "default" {
	grpc {
		include_metadata = true
	}

	http {
		include_metadata = true
	}

	output {
		metrics = []
		logs    = []
		traces  = [otelcol.processor.discovery.default.input]
	}
}

discovery.azure "default_prometheus1" {
	subscription_id = "subscription1"

	oauth {
		client_id     = "client1"
		tenant_id     = "tenant1"
		client_secret = "secret1"
	}

	managed_identity {
		client_id = "client1"
	}
}

discovery.lightsail "default_prometheus1" {
	region     = "us-east-1"
	access_key = "YOUR_ACCESS_KEY"
	secret_key = "YOUR_SECRET_KEY"
	port       = 8080
}

discovery.relabel "default_prometheus1" {
	targets = concat(
		discovery.azure.default_prometheus1.targets,
		discovery.lightsail.default_prometheus1.targets,
	)

	rule {
		source_labels = ["__address1__"]
		target_label  = "__param_target1"
	}

	rule {
		source_labels = ["__address2__"]
		target_label  = "__param_target2"
	}
}

otelcol.processor.discovery "default" {
	targets          = discovery.relabel.default_prometheus1.output
	operation_type   = "insert"
	pod_associations = ["ip", "net.host.ip"]

	output {
		metrics = []
		logs    = []
		traces  = [otelcol.processor.attributes.default.input]
	}
}

otelcol.processor.attributes "default" {
	action {
		key    = "db.table"
		action = "delete"
	}

	output {
		metrics = []
		logs    = []
		traces  = [otelcol.processor.tail_sampling.default.input]
	}
}

otelcol.processor.tail_sampling "default" {
	policy {
		name = "test-policy-1"
		type = "always_sample"
	}
	decision_wait = "5s"

	output {
		traces = [otelcol.processor.batch.default.input]
	}
}

otelcol.processor.batch "default" {
	timeout             = "5s"
	send_batch_size     = 2048
	send_batch_max_size = 4096

	output {
		metrics = []
		logs    = []
		traces  = [otelcol.exporter.otlp.default_0.input, otelcol.exporter.logging.default.input]
	}
}

otelcol.exporter.otlp "default_0" {
	retry_on_failure {
		max_elapsed_time = "1m0s"
	}

	client {
		endpoint = "tempo.example.com:14250"

		tls {
			insecure = true
		}
	}
}

otelcol.exporter.logging "default" { }
