# Resources to assert to exist when reconciling test-integrations.in.yaml.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-agent-example-integrations-deploy
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: config-reloader
      - name: grafana-agent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SHARD
          value: "0"
        - name: SHARDS
          value: "1"
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        volumeMounts:
        - name: config
          readOnly: true
          mountPath: /var/lib/grafana-agent/config-in
        - name: config-out
          mountPath: /var/lib/grafana-agent/config
        - name: secrets
          readOnly: true
          mountPath: /var/lib/grafana-agent/secrets
        - name: grafana-agent-example-integrations-deploy-wal
          mountPath: /var/lib/grafana-agent/data
        - name: varlog
          readOnly: true
          mountPath: /var/log
        - name: dockerlogs
          readOnly: true
          mountPath: /var/lib/docker/containers
      volumes:
      - name: config
        secret:
          secretName: grafana-agent-example-integrations-deploy-config
      - name: config-out
        emptyDir: {}
      - name: secrets
        secret:
          secretName: grafana-agent-example-secrets
      - name: grafana-agent-example-integrations-deploy-wal
        emptyDir: {}
      - name: varlog
        hostPath:
          path: /var/log
      - name: dockerlogs
        hostPath:
          path: /var/lib/docker/containers

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent-example-integrations-ds
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: config-reloader
      - name: grafana-agent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SHARD
          value: "0"
        - name: SHARDS
          value: "1"
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        volumeMounts:
        - name: config
          readOnly: true
          mountPath: /var/lib/grafana-agent/config-in
        - name: config-out
          mountPath: /var/lib/grafana-agent/config
        - name: secrets
          readOnly: true
          mountPath: /var/lib/grafana-agent/secrets
        - name: default-node-exporter-proc
          mountPath: /default/node_exporter/proc
        - name: default-node-exporter-sys
          mountPath: /default/node_exporter/sys
        - name: default-node-exporter-root
          mountPath: /default/node_exporter/rootfs
        - name: grafana-agent-example-integrations-secrets
          readOnly: true
          mountPath: /etc/grafana-agent/integrations
        - name: grafana-agent-example-integrations-ds-wal
          mountPath: /var/lib/grafana-agent/data
        - name: varlog
          readOnly: true
          mountPath: /var/log
        - name: dockerlogs
          readOnly: true
          mountPath: /var/lib/docker/containers
      volumes:
      - name: config
        secret:
          secretName: grafana-agent-example-integrations-ds-config
      - name: config-out
        emptyDir: {}
      - name: secrets
        secret:
          secretName: grafana-agent-example-secrets
      - name: default-node-exporter-proc
        hostPath:
          path: /proc
      - name: default-node-exporter-sys
        hostPath:
          path: /sys
      - name: default-node-exporter-root
        hostPath:
          path: /root
      - name: grafana-agent-example-integrations-secrets
        secret:
          secretName: grafana-agent-example-secrets
          items:
          - key: _secrets_default_fake_secret_key
            path: secrets/default/fake-secret/key
          - key: _configMaps_default_fake_configmap_foo
            path: configMaps/default/fake-configmap/foo
      - name: grafana-agent-example-integrations-ds-wal
        emptyDir: {}
      - name: varlog
        hostPath:
          path: /var/log
      - name: dockerlogs
        hostPath:
          path: /var/lib/docker/containers
