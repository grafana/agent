#!/usr/bin/env bash

set -euf -o pipefail

readonly IMAGE_PREFIX=$1
readonly VERSION=$2
readonly RELEASE=$3
readonly DISABLE_CLEANUP=${DISABLE_CLEANUP:-0}

readonly GID=${GID:-$(id -g)}

declare -a CONTAINERS=()

function error() {
    echo "$@"; exit 1
}

function cleanup() {
    if [[ "${DISABLE_CLEANUP}" -ne 1 ]]; then
        docker rm --force "${CONTAINERS[@]}" &>/dev/null
    fi
}

trap cleanup EXIT

function test_with_systemd() {
    local -r image=$1
    local -r install_command=$2
    local container


    container=$(docker run --tmpfs /run --tmpfs /run/lock -v /sys/fs/cgroup:/sys/fs/cgroup:ro -itd -v "$(pwd)"/dist:/dist -p 9009 "${image}")
    CONTAINERS+=("${container}")

    port=$(docker inspect --format='{{(index (index .NetworkSettings.Ports "9009/tcp") 0).HostPort}}' "${container}")

    docker exec -i "${container}" /bin/bash -c "${install_command}; systemctl enable grafana-agent; systemctl start grafana-agent; sleep 5; systemctl --no-pager status grafana-agent"
}

test_with_systemd "${IMAGE_PREFIX}"/centos-systemd "rpm -i /dist/grafana-agent-${VERSION}-${RELEASE}.x86_64.rpm"
test_with_systemd "${IMAGE_PREFIX}"/debian-systemd "dpkg -i /dist/grafana-agent-${VERSION}-${RELEASE}.x86_64.deb"
