---
# IMPORTANT: Any changes to this file have to be signed, this can be done by running make drone
# Note that you will need to already have added DRONE_TOKEN as an environment variable
---
# Ensures that linting is done properly
kind: pipeline
name: Lint
platform:
  os: linux
  arch: amd64

steps:
- name: lint
  image: golangci/golangci-lint:v1.37.1
  commands:
  - apt-get update -y && apt-get install -y libsystemd-dev
  - make lint
---
# Generates executables and ensures they are built
kind: pipeline
type: docker
name: Make Executables
platform:
  os: linux
  arch: amd64

steps:
- name: distribute
  image: rfratto/seego
  commands:
  - apt-get update &&  apt-get install -y rubygems rpm nsis
  - gem install --no-document fpm
  - mkdir -p /usr/local/go/bin
  - wget -q https://golang.org/dl/go1.16.5.linux-amd64.tar.gz
  - tar -C /usr/local -xzf go1.16.5.linux-amd64.tar.gz
  - rm go1.16.5.linux-amd64.tar.gz
  - export PATH=$PATH:/usr/local/go/bin
  - make BUILD_IN_CONTAINER=false RELEASE_TAG=v0.0.0 dist
---
# Run golang unit tests
kind: pipeline
type: docker
name: Test
platform:
  os: linux
  arch: amd64

steps:
- name: distribute
  image: rfratto/seego
  commands:
  - apt-get update &&  apt-get install -y rubygems rpm nsis  apt-transport-https ca-certificates curl gnupg lsb-release
  - gem install --no-document fpm
  - mkdir -p /usr/local/go/bin
  - wget -q https://golang.org/dl/go1.16.5.linux-amd64.tar.gz
  - tar -C /usr/local -xzf go1.16.5.linux-amd64.tar.gz
  - rm go1.16.5.linux-amd64.tar.gz
  - export PATH=$PATH:/usr/local/go/bin
  - make BUILD_IN_CONTAINER=false test
---
# Create artifacts and draft release, ONLY used when a tag is pushed
kind: pipeline
type: docker
name: Release
platform:
  os: linux
  arch: amd64
trigger:
  event:
  - tag

steps:
- name: create-release
  image: rfratto/seego
  volumes:
  - name: docker
    path: /var/run/docker.sock
  environment:
    DOCKER_LOGIN:
      from_secret: DOCKER_LOGIN
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
    GITHUB_TOKEN:
      from_secret: GITHUB_KEY
  commands:
  - apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
  - curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
  - apt-get update &&  apt-get install -y rubygems rpm nsis docker-ce docker-ce-cli containerd.io
  - docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
  - gem install --no-document fpm
  - mkdir -p /usr/local/go/bin
  - wget -q https://golang.org/dl/go1.16.5.linux-amd64.tar.gz
  - tar -C /usr/local -xzf go1.16.5.linux-amd64.tar.gz
  - rm go1.16.5.linux-amd64.tar.gz
  - export PATH=$PATH:/usr/local/go/bin
  - GO111MODULE=on go get -u github.com/mitchellh/gox github.com/tcnksm/ghr
  - export PATH="$(go env GOPATH)/bin:$PATH"
  - RELEASE_TAG=$DRONE_TAG
  - make -j4 BUILD_IN_CONTAINER=false RELEASE_BUILD=true RELEASE_TAG=$RELEASE_TAG publish

volumes:
- name: docker
  host: 
    path: /var/run/docker.sock
---
# Build and push containers
kind: pipeline
type: docker
name: Containerize
platform:
  os: linux
  arch: amd64

steps:
- name: Build Containers
  image: docker
  volumes:
  - name: docker
    path: /var/run/docker.sock
  environment:
    DOCKER_LOGIN:
      from_secret: DOCKER_LOGIN
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
  - docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
  - apk update && apk add make bash wget git qemu
  - wget -q https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64
  - mkdir -p ~/.docker/cli-plugins 
  - cp buildx-v0.5.1.linux-amd64 ~/.docker/cli-plugins/docker-buildx
  - chmod a+x ~/.docker/cli-plugins/docker-buildx
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --name multiarch --driver docker-container --use
  - make CROSS_BUILD=true RELEASE_BUILD=true agent-image
  - make CROSS_BUILD=true RELEASE_BUILD=true agentctl-image

volumes:
- name: docker
  host: 
    path: /var/run/docker.sock
---
kind: signature
hmac: 25dc50fe5bb6e8d8c867ce8d8a3cd402ea691a75933fe42383dcd346dcfc05a6

...
