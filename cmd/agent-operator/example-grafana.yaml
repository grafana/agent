## example-grafana.yaml contains a tiny Grafana deployment used for testing the
## Grafana Agent Operator.

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: default
  labels:
    app: grafana
spec:
  serviceName: grafana
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: loki
        image: grafana/grafana:8.0.4
        args:
          - --homepath=/usr/share/grafana
          - --config=/etc/grafana-config/grafana.ini
        ports:
          - name: http
            containerPort: 8080
        volumeMounts:
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-datasources
            readOnly: true
          - mountPath: /etc/grafana-config
            name: config
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: grafana-config
        - name: grafana-datasources
          configMap:
            name: grafana-datasources

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
  - name: http
    port: 8080
    targetPort: 8080

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: default
  labels:
    app: grafana
data:
  grafana.ini: |
    [server]
    http_port = 8080
    root_url = http://grafana.k3d.localhost:30080/

    [auth.anonymous]
    enabled = true
    org_role = "Admin"

    [analytics]
    reporting_enabled = false

    [users]
    default_theme = 'dark'

    [explore]
    enabled = true

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: default
  labels:
    app: grafana
data:
  loki.yml: |
    apiVersion: 1
    datasources:
    - name: loki
      type: loki
      access: proxy
      url: http://loki.default.svc.cluster.local:8080
      isDefault: true
      version: 1
      editable: false
      jsonData:
        httpMethod: GET

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: default
  labels:
    app: grafana
spec:
  rules:
  - host: grafana.k3d.localhost
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: grafana
              port: { name: 'http' }
