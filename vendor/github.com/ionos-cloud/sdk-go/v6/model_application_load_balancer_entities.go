/*
 * CLOUD API
 *
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// ApplicationLoadBalancerEntities struct for ApplicationLoadBalancerEntities
type ApplicationLoadBalancerEntities struct {
	Forwardingrules *ApplicationLoadBalancerForwardingRules `json:"forwardingrules,omitempty"`
}

// NewApplicationLoadBalancerEntities instantiates a new ApplicationLoadBalancerEntities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationLoadBalancerEntities() *ApplicationLoadBalancerEntities {
	this := ApplicationLoadBalancerEntities{}

	return &this
}

// NewApplicationLoadBalancerEntitiesWithDefaults instantiates a new ApplicationLoadBalancerEntities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationLoadBalancerEntitiesWithDefaults() *ApplicationLoadBalancerEntities {
	this := ApplicationLoadBalancerEntities{}
	return &this
}

// GetForwardingrules returns the Forwardingrules field value
// If the value is explicit nil, the zero value for ApplicationLoadBalancerForwardingRules will be returned
func (o *ApplicationLoadBalancerEntities) GetForwardingrules() *ApplicationLoadBalancerForwardingRules {
	if o == nil {
		return nil
	}

	return o.Forwardingrules

}

// GetForwardingrulesOk returns a tuple with the Forwardingrules field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationLoadBalancerEntities) GetForwardingrulesOk() (*ApplicationLoadBalancerForwardingRules, bool) {
	if o == nil {
		return nil, false
	}

	return o.Forwardingrules, true
}

// SetForwardingrules sets field value
func (o *ApplicationLoadBalancerEntities) SetForwardingrules(v ApplicationLoadBalancerForwardingRules) {

	o.Forwardingrules = &v

}

// HasForwardingrules returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerEntities) HasForwardingrules() bool {
	if o != nil && o.Forwardingrules != nil {
		return true
	}

	return false
}

func (o ApplicationLoadBalancerEntities) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Forwardingrules != nil {
		toSerialize["forwardingrules"] = o.Forwardingrules
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationLoadBalancerEntities struct {
	value *ApplicationLoadBalancerEntities
	isSet bool
}

func (v NullableApplicationLoadBalancerEntities) Get() *ApplicationLoadBalancerEntities {
	return v.value
}

func (v *NullableApplicationLoadBalancerEntities) Set(val *ApplicationLoadBalancerEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationLoadBalancerEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationLoadBalancerEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationLoadBalancerEntities(val *ApplicationLoadBalancerEntities) *NullableApplicationLoadBalancerEntities {
	return &NullableApplicationLoadBalancerEntities{value: val, isSet: true}
}

func (v NullableApplicationLoadBalancerEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationLoadBalancerEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
